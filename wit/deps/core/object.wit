package godot:core@0.1.0;

interface object {
    use core.{godot-var, error-res, int};

    from-instance-id: func(id: s64) -> godot-var;
    instance-id: func(var: borrow<godot-var>) -> s64;

    free: func(var: borrow<godot-var>);
    queue-free: func(var: borrow<godot-var>);
    is-queued-for-deletion: func(var: borrow<godot-var>) -> bool;
    cancel-free: func(var: borrow<godot-var>);

    get-class: func(var: borrow<godot-var>) -> godot-var;
    is-class: func(var: borrow<godot-var>, class: borrow<godot-var>) -> bool;
    get-script: func(var: borrow<godot-var>) -> option<godot-var>;

    get-property-list: func(var: borrow<godot-var>) -> godot-var;
    get-meta-list: func(var: borrow<godot-var>) -> godot-var;
    get-method-list: func(var: borrow<godot-var>) -> godot-var;
    get-signal-list: func(var: borrow<godot-var>) -> godot-var;

    has-meta: func(var: borrow<godot-var>, name: borrow<godot-var>) -> bool;
    has-method: func(var: borrow<godot-var>, name: borrow<godot-var>) -> bool;
    get-method-argument-count: func(var: borrow<godot-var>, name: borrow<godot-var>) -> int;
    has-signal: func(var: borrow<godot-var>, name: borrow<godot-var>) -> bool;

    call: func(var: borrow<godot-var>, name: borrow<godot-var>, args: list<option<borrow<godot-var>>>) -> option<godot-var>;
    callv: func(var: borrow<godot-var>, name: borrow<godot-var>, args: borrow<godot-var>) -> option<godot-var>;
    call-deferred: func(var: borrow<godot-var>, name: borrow<godot-var>, args: list<option<borrow<godot-var>>>) -> option<godot-var>;

    connect: func(var: borrow<godot-var>, name: borrow<godot-var>, callable: borrow<godot-var>, %flags: u32) -> error-res;
    disconnect: func(var: borrow<godot-var>, name: borrow<godot-var>, callable: borrow<godot-var>);
    is-connected: func(var: borrow<godot-var>, name: borrow<godot-var>, callable: borrow<godot-var>) -> bool;
    emit-signal: func(var: borrow<godot-var>, name: borrow<godot-var>, args: list<option<borrow<godot-var>>>) -> error-res;

    is-blocking-signals: func(var: borrow<godot-var>) -> bool;
    set-block-signals: func(var: borrow<godot-var>, val: bool);

    get: func(var: borrow<godot-var>, name: borrow<godot-var>) -> option<godot-var>;
    set: func(var: borrow<godot-var>, name: borrow<godot-var>, val: option<borrow<godot-var>>);
    set-deferred: func(var: borrow<godot-var>, name: borrow<godot-var>, val: option<borrow<godot-var>>);

    get-indexed: func(var: borrow<godot-var>, path: borrow<godot-var>) -> option<godot-var>;
    set-indexed: func(var: borrow<godot-var>, path: borrow<godot-var>, val: option<borrow<godot-var>>);

    get-meta: func(var: borrow<godot-var>, name: borrow<godot-var>, default: option<borrow<godot-var>>) -> option<godot-var>;
    set-meta: func(var: borrow<godot-var>, name: borrow<godot-var>, val: option<borrow<godot-var>>);
    remove-meta: func(var: borrow<godot-var>, name: borrow<godot-var>);

    can-translate-messages: func(var: borrow<godot-var>) -> bool;
    set-message-translation: func(var: borrow<godot-var>, val: bool);
    tr: func(var: borrow<godot-var>, msg: borrow<godot-var>, ctx: option<borrow<godot-var>>) -> godot-var;
    tr-n: func(var: borrow<godot-var>, msg: borrow<godot-var>, plural: borrow<godot-var>, n: s32, ctx: option<borrow<godot-var>>) -> godot-var;
}
